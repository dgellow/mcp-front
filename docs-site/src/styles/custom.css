/* Custom styles for MCP Front documentation - Minimal like architecture.svg */

@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&family=JetBrains+Mono:wght@300;400;500&display=swap');

:root {
  /* Colors directly from architecture.svg */
  --sl-color-bg: #1A1A1A;
  --sl-color-bg-nav: #222222;
  --sl-color-bg-sidebar: #1A1A1A;
  --sl-color-bg-inline-code: #2B2B2B;
  
  --sl-color-text: #E5E5E5;
  --sl-color-text-accent: #888888;
  
  --sl-color-accent: #74AA9C;
  --sl-color-accent-high: #8BBCAE;
  
  --sl-color-gray-1: #222222;
  --sl-color-gray-2: #2B2B2B;
  --sl-color-gray-3: #3A3A3A;
  --sl-color-gray-4: #444444;
  --sl-color-gray-5: #666666;
  --sl-color-gray-6: #888888;
  
  --sl-color-white: #E5E5E5;
  --sl-color-black: #1A1A1A;
  
  /* Font stacks */
  --sl-font: 'Inter', -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
  --sl-font-mono: 'JetBrains Mono', 'SF Mono', Monaco, Consolas, monospace;
}

/* Grain texture overlay */
body::after {
  content: '';
  position: fixed;
  inset: 0;
  pointer-events: none;
  z-index: 1;
  opacity: 0.06;
  background-image: url("data:image/svg+xml,%3Csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='4' seed='5' /%3E%3C/filter%3E%3Crect width='100%25' height='100%25' fill='%23000' filter='url(%23noiseFilter)' opacity='0.5' /%3E%3C/svg%3E");
  mix-blend-mode: screen;
}

/* Basic overrides to match SVG aesthetic */
body {
  background: #1A1A1A;
  font-family: 'Inter', -apple-system, system-ui, sans-serif;
  font-weight: 400;
  position: relative;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Typography improvements */
h1, h2, h3, h4, h5, h6 {
  font-weight: 500;
  letter-spacing: -0.02em;
  line-height: 1.3;
}

h1 {
  font-size: 2.5rem;
  font-weight: 300;
}

h2 {
  font-size: 1.875rem;
  font-weight: 400;
  margin-top: 3rem;
}

h3 {
  font-size: 1.375rem;
  font-weight: 500;
}

p {
  line-height: 1.7;
  font-size: 1rem;
  color: #D5D5D5;
}

strong {
  font-weight: 500;
  color: #E5E5E5;
}

/* Card effects */
.card-grid {
  gap: 1.5rem !important;
}

.card-grid > li {
  background: transparent !important;
  border: none !important;
  padding: 0 !important;
}

.card {
  background: #1A1A1A !important;
  border: 1px solid #2B2B2B !important;
  border-radius: 0 !important;
  padding: 1.5rem !important;
  height: 100%;
  position: relative;
  overflow: visible !important;
  transition: all 0.2s ease;
}

.card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 3px;
  height: 100%;
  background: #74AA9C;
  opacity: 0;
  transition: opacity 0.2s ease;
}

.card:hover::before {
  opacity: 1;
}

.card::after {
  content: '';
  position: absolute;
  bottom: -1px;
  left: -1px;
  right: -1px;
  height: 1px;
  background: linear-gradient(90deg, transparent, #74AA9C, transparent);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.card:hover::after {
  opacity: 0.6;
}

.card:hover {
  background: #222222 !important;
  border-color: #3A3A3A !important;
}

/* Card title */
.card > p:first-of-type {
  font-size: 1.125rem !important;
  font-weight: 400 !important;
  color: #E5E5E5 !important;
  margin-bottom: 0.75rem !important;
  letter-spacing: 0.5px;
}

/* Card description */
.card > p:last-of-type {
  font-size: 0.875rem !important;
  color: #888888 !important;
  line-height: 1.6 !important;
  margin: 0 !important;
}

/* Card icon */
.card svg {
  display: none !important;
}

/* Button effects */
a[class*="action"],
button,
.sl-link-button {
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
  border: 1px solid #3A3A3A;
}

a[class*="action"]::before,
button::before,
.sl-link-button::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(135deg, transparent 30%, rgba(116, 170, 156, 0.1) 50%, transparent 70%);
  transform: translateX(-100%);
  transition: transform 0.6s ease;
}

a[class*="action"]:hover,
button:hover,
.sl-link-button:hover {
  border-color: #74AA9C;
  box-shadow: 0 4px 16px rgba(116, 170, 156, 0.2);
}

a[class*="action"]:hover::before,
button:hover::before,
.sl-link-button:hover::before {
  transform: translateX(100%);
}

/* Code block styling */
pre {
  background: #222222 !important;
  border: 1px solid #3A3A3A !important;
}

pre code {
  background: transparent !important;
  color: #E5E5E5 !important;
}

/* Inline code */
code:not(pre code) {
  background: #2B2B2B;
  color: #8BBCAE;
  border: 1px solid #3A3A3A;
  font-family: 'JetBrains Mono', 'SF Mono', Monaco, monospace;
  font-size: 0.875em;
  font-weight: 400;
  padding: 0.125rem 0.375rem;
  border-radius: 4px;
}

/* Syntax highlighting */
.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: #666666;
}

.token.punctuation {
  color: #888888;
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
  color: #D4A574;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
  color: #74AA9C;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
  color: #888888;
}

.token.atrule,
.token.attr-value,
.token.keyword {
  color: #74AA9C;
}

.token.function,
.token.class-name {
  color: #D4A574;
}

.token.regex,
.token.important,
.token.variable {
  color: #C19A6B;
}

/* Link styling */
a {
  color: #74AA9C;
  text-decoration: none;
  transition: color 0.2s ease;
}

a:hover {
  color: #8BBCAE;
}

/* Architecture diagram styling - full width section */
.architecture-diagram {
  margin: 4rem calc(-50vw + 50%);
  padding: 4rem 2rem;
  background: #222222;
  border-top: 1px solid #3A3A3A;
  border-bottom: 1px solid #3A3A3A;
  position: relative;
  overflow: hidden;
  width: 100vw;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
}

.architecture-diagram::before {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(ellipse at 50% 50%, rgba(116, 170, 156, 0.03), transparent 60%);
  pointer-events: none;
}

.architecture-diagram object,
.architecture-diagram img {
  width: 100%;
  height: auto;
  display: block;
  max-width: 1400px;
  margin: 0 auto;
}

/* Add shadow as a separate element to avoid rasterization */
.architecture-diagram::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 10%;
  right: 10%;
  height: 100px;
  background: radial-gradient(ellipse at center, rgba(0, 0, 0, 0.2), transparent 70%);
  pointer-events: none;
  z-index: -1;
}

/* That's it. Let Starlight handle the rest. */