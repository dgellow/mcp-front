/* Clean, minimal light theme */

@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap');

:root {
  color-scheme: light;
  --sl-color-accent: #FF6B6B;
}

[data-theme='dark'] {
  --sl-color-accent: #FF6B6B;
  --sl-color-accent-low: #FF6B6B;
  --sl-color-accent-high: #FF5252;
  --sl-color-text-accent: #333333;
}

/* Fix GitHub button in dark mode */
[data-theme='dark'] .sl-nav .social-icons a {
  color: #FFFFFF !important;
}

[data-theme='dark'] .sl-nav .social-icons svg {
  fill: #FFFFFF !important;
  color: #FFFFFF !important;
}

[data-theme='dark'] .sl-nav .social-icons svg path {
  fill: #FFFFFF !important;
}

[data-theme='dark'] .sl-nav .social-icons * {
  color: #FFFFFF !important;
  fill: #FFFFFF !important;
}

/* Try broader selectors for GitHub icon */
[data-theme='dark'] header svg {
  fill: #FFFFFF !important;
}

[data-theme='dark'] header [href*="github"] {
  color: #FFFFFF !important;
}

[data-theme='dark'] header [href*="github"] svg {
  fill: #FFFFFF !important;
}

/* Fix table of contents current section in dark mode */
[data-theme='dark'] .sl-toc a[aria-current="true"] {
  color: #FF6B6B !important;
  font-weight: 600;
}

[data-theme='dark'] .sl-toc .current-header-link {
  color: #FF6B6B !important;
  font-weight: 600;
}

[data-theme='dark'] .sl-toc li.current {
  color: #FF6B6B !important;
}

[data-theme='dark'] .sl-toc li.current a {
  color: #FF6B6B !important;
}

/* Try broader TOC selectors */
[data-theme='dark'] aside a[aria-current] {
  color: #FF6B6B !important;
}

[data-theme='dark'] .right-sidebar a[aria-current] {
  color: #FF6B6B !important;
}

[data-theme='dark'] nav[aria-labelledby*="toc"] a[aria-current] {
  color: #FF6B6B !important;
}

/* Keep regular content links red, but exclude heading anchor links */
[data-theme='dark'] .sl-markdown-content p a,
[data-theme='dark'] .sl-markdown-content li a {
  color: #FF9999 !important;
}

/* Fix heading anchor links in dark mode */
[data-theme='dark'] .sl-markdown-content h1 a,
[data-theme='dark'] .sl-markdown-content h2 a,
[data-theme='dark'] .sl-markdown-content h3 a,
[data-theme='dark'] .sl-markdown-content h4 a,
[data-theme='dark'] .sl-markdown-content h5 a,
[data-theme='dark'] .sl-markdown-content h6 a {
  color: #E5E5E5 !important;
}

/* Typography improvements */
h1, h2, h3, h4, h5, h6 {
  font-weight: 600;
  letter-spacing: -0.015em;
}

/* Code styling */
code {
  padding: 0.125rem 0.25rem;
  border-radius: 3px;
  font-size: 0.875em;
}

/* Container width */
.sl-container {
  max-width: 900px;
}

/* Clean architecture showcase */
.architecture-showcase {
  margin: 3rem 0;
  padding: 2rem;
  background: #f8f9fa;
  border: 1px solid #e8eaed;
  border-radius: 12px;
  text-align: center;
  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.04);
}

.architecture-diagram {
  width: 100%;
  max-width: 800px;
  height: auto;
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));
  transition: transform 0.3s ease;
}

.architecture-diagram:hover {
  transform: scale(1.02);
}


/* Feature highlights */
.feature-highlight {
  display: inline-block;
  background: #FF6B6B;
  color: white;
  padding: 0.25rem 0.75rem;
  border-radius: 16px;
  font-size: 0.875rem;
  font-weight: 500;
  margin: 0 0.25rem;
}

/* Feature underlines */
.feature-underline {
  text-decoration: underline;
  text-decoration-color: #FF6B6B;
  text-decoration-thickness: 2px;
  text-underline-offset: 2px;
}

/* Code example enhancement */
.code-example {
  position: relative;
  margin: 2rem 0;
}

.code-example::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: linear-gradient(90deg, #FF6B6B, #FF5252);
  border-radius: 6px 6px 0 0;
}

/* Quick test section styling */
.quick-test {
  background: #f6f8fa;
  border: 1px solid #d1d9e0;
  border-radius: 8px;
  padding: 1.5rem;
  margin: 2rem 0;
}

.quick-test h2 {
  margin-top: 0;
  color: #FF6B6B;
}

/* Logo enhancement in header */
.sl-nav-header img {
  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
}

/* Header logo animations - slightly more exaggerated and different timing */
.header-left-eye {
  animation: headerLeftEyeLook 10s linear infinite;
  transform-origin: 10px 20px;
}

.header-right-eye {
  animation: headerRightEyeLook 10s linear infinite;
  transform-origin: 30px 20px;
}

.header-nose {
  animation: headerNoseRotate 10s ease-in-out infinite;
  transform-origin: 20px 20px;
}

@keyframes headerNoseRotate {
  0%, 12% { 
    transform: rotate(0deg) scaleX(1);
  }
  18%, 32% { 
    transform: rotate(-1.5deg) scaleX(0.92); /* Slightly more exaggerated */
  }
  38%, 52% { 
    transform: rotate(1.5deg) scaleX(0.92);
  }
  58%, 72% { 
    transform: rotate(0deg) scaleX(1);
  }
  78%, 100% { 
    transform: rotate(0deg) scaleX(1);
  }
}

@keyframes headerLeftEyeLook {
  0%, 12% { 
    transform: translate(0, 0) scaleY(1);
  }
  18%, 32% { 
    transform: translate(-1.2px, 0) scaleY(1); /* Slightly more movement */
  }
  38%, 52% { 
    transform: translate(1.2px, 0) scaleY(1);
  }
  58%, 72% { 
    transform: translate(0, 0) scaleY(1);
  }
  78% { 
    transform: translate(0, 0) scaleY(1);
  }
  78.3% { 
    transform: translate(0, 0) scaleY(0.08); /* Slightly tighter blink */
  }
  79.8% { 
    transform: translate(0, 0) scaleY(0.08);
  }
  80.1% { 
    transform: translate(0, 0) scaleY(1);
  }
  100% { 
    transform: translate(0, 0) scaleY(1);
  }
}

@keyframes headerRightEyeLook {
  0%, 12% { 
    transform: translate(0, 0) scaleY(1);
  }
  18%, 32% { 
    transform: translate(-1.2px, 0) scaleY(1);
  }
  38%, 52% { 
    transform: translate(1.2px, 0) scaleY(1);
  }
  58%, 72% { 
    transform: translate(0, 0) scaleY(1);
  }
  78% { 
    transform: translate(0, 0) scaleY(1);
  }
  78.3% { 
    transform: translate(0, 0) scaleY(0.08);
  }
  79.8% { 
    transform: translate(0, 0) scaleY(0.08);
  }
  80.1% { 
    transform: translate(0, 0) scaleY(1);
  }
  100% { 
    transform: translate(0, 0) scaleY(1);
  }
}

/* Hero logo positioning */
.hero-logo {
  display: block;
}

/* Eye animations - looking left, right, center, then blink */
.left-eye {
  animation: leftEyeLook 12s linear infinite;
  transform-origin: 10px 20px;
}

.right-eye {
  animation: rightEyeLook 12s linear infinite;
  transform-origin: 30px 20px;
}

/* Nose animation - subtle 3D rotation when looking around */
.nose {
  animation: noseRotate 12s ease-in-out infinite;
  transform-origin: 20px 20px;
}

@keyframes noseRotate {
  0%, 15% { 
    transform: rotate(0deg) scaleX(1);
  }
  20%, 35% { 
    transform: rotate(-1deg) scaleX(0.95); /* Nose turns left slightly */
  }
  40%, 55% { 
    transform: rotate(1deg) scaleX(0.95); /* Nose turns right slightly */
  }
  60%, 75% { 
    transform: rotate(0deg) scaleX(1); /* Nose back to center */
  }
  80%, 100% { 
    transform: rotate(0deg) scaleX(1); /* Stay center during blink */
  }
}

@keyframes leftEyeLook {
  0%, 15% { 
    transform: translate(0, 0) scaleY(1);
  }
  20%, 35% { 
    transform: translate(-1px, 0) scaleY(1); /* Look left */
  }
  40%, 55% { 
    transform: translate(1px, 0) scaleY(1); /* Look right */
  }
  60%, 75% { 
    transform: translate(0, 0) scaleY(1); /* Look center */
  }
  80% { 
    transform: translate(0, 0) scaleY(1); /* Eyes open */
  }
  80.2% { 
    transform: translate(0, 0) scaleY(0.1); /* Eyes close quickly */
  }
  81.5% { 
    transform: translate(0, 0) scaleY(0.1); /* Stay closed */
  }
  81.7% { 
    transform: translate(0, 0) scaleY(1); /* Eyes open quickly */
  }
  100% { 
    transform: translate(0, 0) scaleY(1); /* Stay open */
  }
}

@keyframes rightEyeLook {
  0%, 15% { 
    transform: translate(0, 0) scaleY(1);
  }
  20%, 35% { 
    transform: translate(-1px, 0) scaleY(1); /* Look left */
  }
  40%, 55% { 
    transform: translate(1px, 0) scaleY(1); /* Look right */
  }
  60%, 75% { 
    transform: translate(0, 0) scaleY(1); /* Look center */
  }
  80% { 
    transform: translate(0, 0) scaleY(1); /* Eyes open */
  }
  80.2% { 
    transform: translate(0, 0) scaleY(0.1); /* Eyes close quickly */
  }
  81.5% { 
    transform: translate(0, 0) scaleY(0.1); /* Stay closed */
  }
  81.7% { 
    transform: translate(0, 0) scaleY(1); /* Eyes open quickly */
  }
  100% { 
    transform: translate(0, 0) scaleY(1); /* Stay open */
  }
}

