# Build stage
FROM golang:1.24-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application
RUN go build -o mcp-front ./cmd/mcp-front

# Runtime stage with Docker client
FROM alpine:latest

# Install Docker CLI only (not the daemon)
RUN apk add --no-cache \
    ca-certificates \
    docker-cli

# Create non-root user
RUN addgroup -g 1000 -S mcpfront && \
    adduser -u 1000 -S mcpfront -G mcpfront

# Copy binary from builder
COPY --from=builder /app/mcp-front /usr/local/bin/mcp-front

# Create config directory
RUN mkdir -p /app && chown -R mcpfront:mcpfront /app

# Add mcpfront user to docker group (will be created when socket is mounted)
# This allows the user to access the Docker socket
RUN addgroup -g 999 docker || true && \
    addgroup mcpfront docker || true

WORKDIR /app

# Switch to non-root user
USER mcpfront

# Expose port
EXPOSE 8080

# Default command
ENTRYPOINT ["mcp-front"]
CMD ["-config", "/app/config.json"]