version: '3.8'

services:
  mcp-front:
    build: .
    ports:
      - "8080:8080"
    environment:
      # OAuth Configuration
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      
      # MCP Server Tokens
      - NOTION_TOKEN=${NOTION_TOKEN}
      - DATABASE_URL=${DATABASE_URL}
      - EXTERNAL_API_TOKEN=${EXTERNAL_API_TOKEN}
      
      # GCP Configuration
      - GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-service-account.json
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
    volumes:
      # Mount Docker socket for stdio-based MCP servers
      - /var/run/docker.sock:/var/run/docker.sock:ro
      
      # Mount GCP service account key (if using service account)
      - ${GCP_SERVICE_ACCOUNT_KEY_PATH:-./gcp-service-account.json}:/tmp/gcp-service-account.json:ro
      
      # Mount custom config if needed
      - ${CONFIG_PATH:-./config-oauth.json}:/root/config.json:ro
      
      # Mount repositories for git MCP server
      - ${REPOS_PATH:-./repos}:/repos:ro
    
    networks:
      - mcp-network
    
    restart: unless-stopped
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Example external MCP servers (uncomment as needed)
  
  # notion-mcp:
  #   image: mcp/notion:latest
  #   environment:
  #     - NOTION_TOKEN=${NOTION_TOKEN}
  #   networks:
  #     - mcp-network
  #   restart: unless-stopped

  # postgres-mcp:
  #   image: mcp/postgres:latest
  #   environment:
  #     - DATABASE_URL=${DATABASE_URL}
  #   networks:
  #     - mcp-network
  #   restart: unless-stopped

networks:
  mcp-network:
    driver: bridge

# Optional: Redis for distributed OAuth token storage
# redis:
#   image: redis:7-alpine
#   command: redis-server --appendonly yes
#   volumes:
#     - redis-data:/data
#   networks:
#     - mcp-network
#   restart: unless-stopped

# volumes:
#   redis-data: